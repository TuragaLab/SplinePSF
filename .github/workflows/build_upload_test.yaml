name: build, upload and lazy test

on:
  push:
  pull_request:
  release:
    types: [edited, published]

jobs:

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows2019 & VS 2019 supports 10.1+
          - os: ubuntu-18.04
            os_base: ubuntu
            shell: bash -l {0}

          - os: macos-10.15
            os_base: macos
            shell: bash -l {0}

          - os: windows-2019
            os_base: windows
            shell: powershell

    defaults:
      run:
        shell: ${{ matrix.shell}}

    env:
        FILENAMES: temp-filenames.txt
        ANACONDA_LABEL: dev

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.7

      - name: Install conda build libraries
        run: |
          conda install conda-build conda-verify anaconda-client

      - name: Choose Mac OS SDK
        if: ${{ matrix.os_base == 'macos'}}
        run: sudo xcode-select --switch /Applications/Xcode_11.5.app/Contents/Developer

      - name: Build SplinePSF (UNIX)
        if: ${{ matrix.os_base == 'ubuntu' || matrix.os_base == 'macos'}}
        run: |
          cd ./dist_tools/conda

          conda-build -c conda-forge spline
          conda-build -c conda-forge spline --output > $FILENAMES

      - name: Build SplinePSF (Windows)
        if: ${{ matrix.os_base == 'windows' }}
        run: |
          Set-Location -Path .\dist_tools\conda

          conda-build -c conda-forge spline
          conda-build -c conda-forge spline --output > $Env:FILENAMES

      - name: Change anaconda label on release
        if: github.event.release
        run: |
          echo "ANACONDA_LABEL=main" >> $GITHUB_ENV

      - name: Change anaconda label on prerelease
        if: "github.event.release.prerelease"
        run: |
          echo "ANACONDA_LABEL=pre" >> $GITHUB_ENV

      - name: Upload to Anaconda Cloud (UNIX)
        if: ${{ matrix.os_base == 'ubuntu' || matrix.os_base == 'macos'}}
        env:
          ANACONDA_TOKEN: ${{ secrets.TURAGALAB_ANACONDA_TOKEN }}
        run: |
          cd ./dist_tools/conda
          while read NAME; do
            anaconda -t $ANACONDA_TOKEN upload -l ${{ env.ANACONDA_LABEL }} -u turagalab $NAME
          done < $FILENAMES

      - name: Upload to Anaconda Cloud (Windows)
        if: ${{ matrix.os_base == 'windows' }}
        env:
          ANACONDA_TOKEN: ${{ secrets.TURAGALAB_ANACONDA_TOKEN }}
        shell: powershell
        run: |
          Set-Location -Path .\dist_tools\conda
          foreach($PATH in Get-Content -path $Env:FILENAMES) {
            anaconda -t $Env:ANACONDA_TOKEN upload -l ${{ env.ANACONDA_LABEL }} -u turagalab $PATH
          }
